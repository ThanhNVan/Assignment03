@page "/Admin/Products/Details/{Id}"
@using Assignment03.EntityProviders;
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.DropDowns

@namespace Assignment03.BlazorWebApp


<PageTitle>Product</PageTitle>
<h3>Product Detail</h3>

@if (WorkItem == null)
{
    <span><p>Loading...</p></span>
} else
{
    <div class="col-lg-12">
        <EditForm Model="@WorkItem">
            <div style="padding-top: 20px;">
                <div class="form-group col-md-6">
                    <SfTextBox ID="Name" @bind-Value="@WorkItem.Name"  Placeholder="Name" FloatLabelType="FloatLabelType.Always"></SfTextBox>
                    <ValidationMessage style="color: #dc3545; height: 0px" For="@(() => WorkItem.Name)" />
                </div>

                <div class="form-group col-md-6">
                    <SfTextBox ID="Weight" @bind-Value="@WorkItem.Weight"  Placeholder="Weight" FloatLabelType="FloatLabelType.Always"></SfTextBox>
                    <ValidationMessage style="color: #dc3545; height: 0px" For="@(() => WorkItem.Weight)" />
                </div>

                <div class="form-group col-md-6">
                    <SfNumericTextBox ID="Price" @bind-Value="@WorkItem.Price"  Placeholder="Price" FloatLabelType="FloatLabelType.Always"></SfNumericTextBox>
                    <ValidationMessage style="color: #dc3545; height: 0px" For="@(() => WorkItem.Price)" />
                </div>

                <div class="form-group col-md-6">
                    <SfNumericTextBox ID="InStock" @bind-Value="@WorkItem.InStock"  Placeholder="InStock" FloatLabelType="FloatLabelType.Always"></SfNumericTextBox>
                    <ValidationMessage style="color: #dc3545; height: 0px" For="@(() => WorkItem.InStock)" />
                </div>

                <div class="form-group col-md-6">
                    <SfTextBox ID="Category" @bind-Value="@WorkItem.Category.Name"  Placeholder="Category" FloatLabelType="FloatLabelType.Always"></SfTextBox>
                </div>
            </div>
            <br />
            <div>
                <dt class="col-sm-2">
                    <SfButton @onclick="async () => await UpdateAsync()">Update</SfButton>
                </dt>
                <br />
                <dd class="col-sm-2">
                    <SfButton @onclick="async () => await CancelAsync()">Cancel</SfButton>
                </dd>

                @if (this.WorkItem.IsDeleted)
                {
                    <dt class="col-sm-2">
                        <SfButton @onclick="async () => await RecoverAsync()">Recover</SfButton>
                    </dt>

                } else
                {
                    <dt class="col-sm-2">
                        <SfButton @onclick="async () => await SoftDeleteAsync()">Delete</SfButton>
                    </dt>
                }
            </div>
        </EditForm>
    </div>
}